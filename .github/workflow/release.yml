name: Create a release & build packages for distribution

on:
  push:
    branches:
      - 'release'

jobs:
  get-app-version:
    name: Get app version from .csproj
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.set_output.outputs.app_version }}
    steps:
    - uses: actions/checkout@v3
    - uses: kzrnm/get-net-sdk-project-versions-action@v1
      id: get_version
      with:
       proj-path: NexNux/NexNux.csproj
    - id: set_output
      run: echo "app_version=${{ steps.get_version.outputs.version-prefix }}" >> $GITHUB_OUTPUT


  create-release-get-url:
    name: Create a new release and get the upload URL
    runs-on: ubuntu-latest
    needs: [get-app-version]
    outputs: 
      upload_url: ${{ steps.set_output.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v3
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.get-app-version.outputs.app_version }}
        release_name: Release ${{ needs.get-app-version.outputs.app_version }}
    - id: set_output
      run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_OUTPUT

  build-windows-x64-packages:
    name: Build & Upload Windows x64 release packages
    runs-on: windows-latest
    needs: [get-app-version, create-release-get-url]
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Install PupNet
      run: dotnet tool install --global KuiperZone.PupNet
    - name: Build Windows-x64 zip
      run: '& "$env:USERPROFILE\.dotnet\tools\pupnet.exe" --runtime win-x64 --kind zip --app-version ${{ needs.get-app-version.outputs.app_version }} -y'
    - name: Upload Windows-x64 zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release-get-url.outputs.upload_url }}
        asset_path: ./NexNux-${{ needs.get-app-version.outputs.app_version }}-1.win-x64.zip
        asset_name: NexNux-${{ needs.get-app-version.outputs.app_version }}-1.win-x64.zip
        asset_content_type: application/zip
    - name: Build Windows-x64 installer
      run: '& "$env:USERPROFILE\.dotnet\tools\pupnet.exe" --runtime win-x64 --kind setup --app-version ${{ needs.get-app-version.outputs.app_version }} -y'
    - name: Upload Windows-x64 installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release-get-url.outputs.upload_url }}
        asset_path: ./NexNux-${{ needs.get-app-version.outputs.app_version }}-1.x64.exe
        asset_name: NexNux-${{ needs.get-app-version.outputs.app_version }}-1.x64.exe
        asset_content_type: application/zip


  build-linux-x64-packages:
    name: Build & Upload Linux x64 release packages
    runs-on: ubuntu-latest
    needs: [get-app-version, create-release-get-url]
    steps:
    - name: apt Update
      run: sudo apt-get update
    - name: Setup FUSE
      run: sudo apt-get install fuse libfuse2
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Install PupNet
      run: dotnet tool install --global KuiperZone.PupNet
    - name: Build Linux-x64 zip
      run: '$HOME/.dotnet/tools/pupnet --runtime linux-x64 --kind zip --app-version ${{ needs.get-app-version.outputs.app_version }} -y'
    - name: Upload Linux-x64 zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release-get-url.outputs.upload_url }}
        asset_path: ./NexNux-${{ needs.get-app-version.outputs.app_version }}-1.linux-x64.zip
        asset_name: NexNux-${{ needs.get-app-version.outputs.app_version }}-1.linux-x64.zip
        asset_content_type: application/zip
    - name: Build Linux-x64 AppImage
      run: '$HOME/.dotnet/tools/pupnet --runtime linux-x64 --kind appimage --app-version ${{ needs.get-app-version.outputs.app_version }} -y'
    - name: Upload Linux-x64 AppImage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release-get-url.outputs.upload_url }}
        asset_path: ./NexNux-${{ needs.get-app-version.outputs.app_version }}-1.x86_64.AppImage
        asset_name: NexNux-${{ needs.get-app-version.outputs.app_version }}-1.x86_64.AppImage
        asset_content_type: application/zip
